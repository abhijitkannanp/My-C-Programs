#include <stdio.h>
#include <string.h>

#define MAX_ITEMS 10


struct Item {
    int id;
    char name[30];
    float price;
    int stock;
};


struct Item inventory[MAX_ITEMS];
int itemCount = 0;


int idExists(int id) {
    for (int i = 0; i < itemCount; i++) {
        if (inventory[i].id == id)
            return i;
    }
    return -1;
}


void addItem() {
    if (itemCount >= MAX_ITEMS) {
        printf("Inventory full! Cannot add more items.\n");
        return;
    }

    int id;
    printf("Enter Item ID: ");
    scanf("%d", &id);

    if (idExists(id) != -1) {
        printf("Item with ID %d already exists.\n", id);
        return;
    }

    struct Item newItem;
    newItem.id = id;

    printf("Enter Item Name: ");
    scanf(" %[^\n]", newItem.name);  newline
    printf("Enter Item Price: ");
    scanf("%f", &newItem.price);
    printf("Enter Stock Quantity: ");
    scanf("%d", &newItem.stock);

    inventory[itemCount++] = newItem;
    printf("Item added successfully!\n");
}


void displayItems() {
    if (itemCount == 0) {
        printf("No items in inventory.\n");
        return;
    }

    printf("\nInventory List:\n");
    for (int i = 0; i < itemCount; i++) {
        printf("ID: %d | Name: %s | Price: %.2f | Stock: %d\n",
               inventory[i].id, inventory[i].name, inventory[i].price, inventory[i].stock);
    }
}


void findItem() {
    int id;
    printf("Enter Item ID to search: ");
    scanf("%d", &id);

    int index = idExists(id);
    if (index != -1) {
        printf("Item Found: ID: %d | Name: %s | Price: %.2f | Stock: %d\n",
               inventory[index].id, inventory[index].name,
               inventory[index].price, inventory[index].stock);
    } else {
        printf("Item with ID %d not found.\n", id);
    }
}


void updateStock() {
    int id, newStock;
    printf("Enter Item ID to update stock: ");
    scanf("%d", &id);

    int index = idExists(id);
    if (index != -1) {
        printf("Enter new stock quantity: ");
        scanf("%d", &newStock);
        inventory[index].stock = newStock;
        printf("Stock updated successfully.\n");
    } else {
        printf("Item with ID %d not found.\n", id);
    }
}


void calculateTotal() {
    float total = 0;
    for (int i = 0; i < itemCount; i++) {
        total += inventory[i].price * inventory[i].stock;
    }
    printf("Total inventory value: â‚¹%.2f\n", total);
}


int main() {
    int choice;

    do {
        printf("\nInventory Menu:\n");
        printf("1. Add Item\n");
        printf("2. Display All Items\n");
        printf("3. Find Item by ID\n");
        printf("4. Update Stock\n");
        printf("5. Calculate Total Inventory Value\n");
        printf("6. Exit\n");
        printf("Enter your choice (1-6): ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: addItem(); break;
            case 2: displayItems(); break;
            case 3: findItem(); break;
            case 4: updateStock(); break;
            case 5: calculateTotal(); break;
            case 6: printf("Exiting program.\n"); break;
            default: printf("Invalid choice. Please enter 1-6.\n");
        }
    } while (choice != 6);

    return 0;
}
